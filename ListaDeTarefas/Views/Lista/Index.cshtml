@model IEnumerable<ListaDeTarefas.Models.Lista>

@{
    ViewBag.Title = "Lista";
}

@*
@{ Layout = null; } <!-- Este comando impede o _ViewStart.cshtml -->
*@

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script type="text/javascript">
    $.getScript("JSR"); //Chamando o Método JavaScript JSR. SSó funciona quando recarrega com novod parâmetros a página
</script>


@section scripts {
    <script type="text/javascript">
        alert('Um simples alert no cliente WEB. Funciona todas as vezes que dá refresh na página.'); // Funciona todas as vezes que dá refresh na página.
    </script>
}

<!-- Botões verdes. -->
<table>
    <tr>
        <td>
            <div id="usuario">
                @Ajax.ActionLink("Usuários",
                    "../usuario",
                    null,
                    new AjaxOptions
                    {
                        UpdateTargetId = "usuario",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    },
                    new {@class = "btn btn-primary"})
            </div>

        </td>
        <td>
            <div id="usuario">
                @Ajax.ActionLink("Tarefas",
                    "../tarefa",
                    null,
                    new AjaxOptions
                    {
                        UpdateTargetId = "tarefa",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    },
                    new {@class = "btn btn-primary"})
            </div>

        </td>
    </tr>
    <tr>
        <td>
            <div id="usuario">
                @Ajax.ActionLink("Listas Generic",
                    "../ListaGeneric",
                    null,
                    new AjaxOptions
                    {
                        UpdateTargetId = "listas generic",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET"
                    },
                    new {@class = "btn btn-primary"})
            </div>

        </td>
        <td>
            <div id="usuario">
                @Ajax.ActionLink("Listas Generic Bootstrap",
                "../ListaGeneric/IndexBootstrap",
                null,
                new AjaxOptions
                {
                    UpdateTargetId = "listas generic bootstrap",
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "GET"
                },
                new { @class = "btn btn-primary" })
            </div>

        </td>
    </tr>
</table>

<br />

<!-- Um Redirect através de método de controle -->
<table>
    <tr>
        <td>
            Um Redirect através de método de controle => 
        </td>
        <td>
            @Html.ActionLink("Redirect", "Redirect", "Lista")
        </td>
    </tr>
</table>

<br />

<div>
    <table>
        <tr>
            <td>
                <div id="IdCidades" />
            </td>
        </tr>
    </table>
</div>

<!-- Trabalhando com cache -->
@{
    var cacheItemKey = "CachedTime";
    var cacheHit = true;
    var time = WebCache.Get(cacheItemKey);

    if (time == null)
    {
        cacheHit = false;
    }

    if (cacheHit == false)
    {
        time = @DateTime.Now;
        WebCache.Set(cacheItemKey, time, 1, false);
    }
}

<h2>Listas</h2>

<!--Insere uma Página ou um user control se quiser em qualquer ponto da página desta maneira-->
@*
    @Html.Action("../Lista/Teste")
    @Html.Action("Create")
*@


<p>
    @Html.ActionLink("Criar Nova Lista", "Create")

</p>
<br />
    @using (Html.BeginForm("Index", "Lista"))
    {
<div>
    <table>
        <tr>
            <td>
                Buscar Listas:
            </td>
            <td>
                <input type="text" name="termo" />
            </td>
            <td>
                <input type="submit" name="busca" />
            </td>
            <td>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </td>
            <td>
                @Html.Action("QuantidadePorPagina")
            </td>
            <td>
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            </td>
            <td>
                @Html.Action("Descer")
            </td>
        </tr>
    </table>
</div>
    }
<br />

<!-- Usando Cahe -->
<!--
<div>
    @*if (cacheHit)
    {
        @:Achou o time no cache.
        }
    else
    {
        @:Não achou o time no cache.
        }
</div>
<div>
    This page was cached at @time.*@
</div>
-->

@if (Model.Count() > 0)
{
    <table class="table" border="0">
        <tr>
            <th>
                @ViewBag.Introducao
            </th>
        <tr>
        <tr>
            <th>
                @if (ViewBag.flagEmail == 1) { ViewBag.flagEmail = "↓"; } else if (ViewBag.flagEmail == 0) { ViewBag.flagEmail = "↑"; }
                @Html.ActionLink("Usuário (" + Html.DisplayNameFor(model => model.Usuario.Email).ToHtmlString() + ")", "Index", new { ordem = ViewBag.UsuarioOrdem }) @ViewBag.flagEmail @*Html.DisplayNameFor(model => model.Usuario.Email)*@
            </th>
            <th>
                @if (ViewBag.flagNome == 1) { ViewBag.flagNome = "↓"; } else if (ViewBag.flagNome == 0) { ViewBag.flagNome = "↑"; }
                @Html.ActionLink((Html.DisplayNameFor(model => model.Nome) + " da Lista"), "Index", new { ordem = ViewBag.NomeOrdem }) @ViewBag.flagNome @*Html.DisplayNameFor(model => model.Nome) da Lista*@
            </th>
            <th>
                @if (ViewBag.flagAtiva == 1) { ViewBag.flagAtiva = "↓"; } else if (ViewBag.flagAtiva == 0) { ViewBag.flagAtiva = "↑"; }
                @Html.ActionLink((Html.DisplayNameFor(model => model.Ativa).ToHtmlString()), "Index", new { ordem = ViewBag.AtivaOrdem }) @ViewBag.flagAtiva @*Html.DisplayNameFor(model => model.Ativa)*@
            </th>
            <th>
                @if (ViewBag.flagPrazo == 1) { ViewBag.flagPrazo = "↓"; } else if (ViewBag.flagPrazo == 0) { ViewBag.flagPrazo = "↑"; }
                @Html.ActionLink((Html.DisplayNameFor(model => model.Prazo).ToHtmlString()), "Index", new { ordem = ViewBag.PrazoOrdem }) @ViewBag.flagPrazo @*Html.DisplayNameFor(model => model.Prazo)*@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tarefas) @*Html.ActionLink((Html.DisplayNameFor(model => model.Tarefas).ToHtmlString()), "Index", new { ordem = ViewBag.TarefasOrdem })*@ 
            </th>
            <th>
                Tarefas Ativas @*Html.DisplayNameFor(model => model.TarefasAtivas)*@
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Usuario.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    <center>
                        @Html.DisplayFor(modelItem => item.Ativa)
                    </center>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Prazo)
                </td>
                <td>
                    <center>
                        @Html.DisplayFor(modelItem => item.Tarefas.Count)
                    </center>
                </td>
                <td>
                    <center>
                        @Html.DisplayFor(modelItem => item.TarefasAtivas)
                    </center>
                </td>
                <td>
                    @Html.ActionLink("Editar", "Edit", new { id = item.ListaId }) |
                    @Html.ActionLink("Detalhes", "Details", new { id = item.ListaId }) |
                    @Html.ActionLink("Deletar", "Delete", new { id = item.ListaId })
                </td>
            </tr>
        }

        @if (ViewBag.Anterior || ViewBag.Proxima)
        { 
            <tr>
                <th></th>
                <th><center>
                    <table border="0">
                        <tr>
                            @if (ViewBag.Anterior == true)
                            {
                            <td>
                                <b>
                                    @Html.ActionLink("Anterior", "IndexPagina", "Lista", new { pagina = (ViewBag.PaginaAtual) - 1, ordem = ViewBag.Ordem }, null)
                                </b>
                            </td>
                            }
                            else
                            {

                                <td>Anterior</td>
                            } <td>|</td>
                            @if (ViewBag.Proxima == true)
                            {
                                <td>
                                    <b>                                        
                                        @Html.ActionLink("Próxima", "IndexPagina", "Lista", new { pagina = (ViewBag.PaginaAtual) + 1, ordem = ViewBag.Ordem }, null)
                                    </b>
                                </td>                                       
                            }
                            else
                            {
                                <td>Próxima</td>
                            }
                        </tr>
                    </table>
                    </center>
                </th>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        }
    </table>
}
else
{
    <table class="table" border="0">
        <tr>
            <th>
                @ViewBag.Introducao
            </th>
        <tr>
        <tr>
            <td>
                @if (@ViewBag.Erro != null)
                {
                    <font color='red'><i>Nenhuma lista com </i></font><b>@ViewBag.Erro</b><font color='red'><i> foi encontrada!</i></font>
                }
                else
                {
                    <font color='red'><i>Nenhuma lista foi encontrada!</i></font>
                }
            </td>
            <td>

            </td>
        </tr>
    </table>
}


<script type="text/javascript">
    $(function () {     // Carrega o JSON "RetornaUmJSON" no div "IdCidades" por AJAX.
        $.ajax({
            dataType: "json",
            type: "POST",
            url: "/Lista/RetornaUmJSON",
            success: function (dados) {
                $("#IdCidades").append("Carrega o JSON 'RetornaUmJSON' no div 'IdCidades' por AJAX.");

                $(dados).each(function (i) {
                    $("#IdCidades").append("<li>CidadeId: " + dados[i].CidadeId + " | Nome: " + dados[i].Nome + " | URL: " + dados[i].Estado + "</li>")
                });
            }
        });
    });
</script>